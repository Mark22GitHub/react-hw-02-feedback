{"version":3,"sources":["Components/Statistics/Statistics.js","Components/Section/Section.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Notification/Notification.js","App.js","index.js","Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","styles","text","textGood","textNeutral","textBad","positive","Section","title","children","defaultProps","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","button","onClick","Notification","message","App","state","handleButtonValue","setState","prevState","values","this","reduce","acc","currentValue","countTotalFeedback","Math","trunc","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"8PAsBeA,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,sBAAKC,UAAWC,IAAOC,KAAvB,UACE,oBAAGF,UAAWC,IAAOE,SAArB,kBAAqCR,KACrC,oBAAGK,UAAWC,IAAOG,YAArB,qBAA2CR,KAC3C,oBAAGI,UAAWC,IAAOI,QAArB,iBAAmCR,KACnC,uCAAUC,KACV,oBAAGE,UAAWC,IAAOK,SAArB,+BAAkDP,EAAlD,YCPEQ,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MAILF,EAAQG,aAAe,CACrBF,MAAO,kBAQMD,Q,gBCIAI,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC9B,wBACEjB,UAAWC,IAAOiB,OAElBC,QAAS,kBAAMN,EAAgBI,IAHjC,SAKGA,GAHIA,SCAEG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,8BAAMA,KC0D7BC,E,4MAtDbC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP2B,kBAAoB,SAAAP,GAClB,EAAKQ,UAAS,SAAAC,GAAS,sBAAQT,EAASS,EAAUT,GAAU,O,wDAG9D,WACE,OAAOH,OAAOa,OAAOC,KAAKL,OAAOM,QAC/B,SAACC,EAAKC,GAAN,OAAuBD,EAAMC,O,6CAIjC,WAAmC,IACzBpC,EAASiC,KAAKL,MAAd5B,KACFG,EAAQ8B,KAAKI,qBACnB,OAAOC,KAAKC,MAAOvC,EAAOG,EAAS,O,oBAGrC,WAAU,IAAD,EACwB8B,KAAKL,MAA5B5B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ8B,KAAKI,qBACbjC,EAAqB6B,KAAKO,kCAEhC,OACE,qCACE,cAAC,EAAD,CAAS3B,MAAO,sBAAhB,SACE,cAAC,EAAD,CACEI,QAASgB,KAAKL,MACdV,gBAAiBe,KAAKJ,sBAI1B,cAAC,EAAD,CAAShB,MAAO,aAAhB,SACGV,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcsB,QAAQ,+B,GA/ChBe,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,YAAc,gCAAgC,QAAU,4BAA4B,SAAW,+B,kBCAzLD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.ce1afe58.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={styles.text}>\n    <p className={styles.textGood}>Good:{good}</p>\n    <p className={styles.textNeutral}>Neutral:{neutral}</p>\n    <p className={styles.textBad}>Bad:{bad}</p>\n    <p>Total:{total}</p>\n    <p className={styles.positive}>Positive feedback:{positivePercentage} %</p>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  title: \"Here's a title\",\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div>\n    {Object.keys(options).map(option => (\n      <button\n        className={styles.button}\n        key={option}\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <div>{message}</div>;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from './Components/Statistics';\nimport Section from './Components/Section';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Notification from './Components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleButtonValue = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce(\n      (acc, currentValue) => acc + currentValue,\n    );\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    return Math.trunc((good / total) * 100);\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title={'Leave your feedback'}>\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleButtonValue}\n          />\n        </Section>\n\n        <Section title={'Statistics'}>\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__3QWrc\",\"textGood\":\"Statistics_textGood__32WMx\",\"textNeutral\":\"Statistics_textNeutral__1hEAP\",\"textBad\":\"Statistics_textBad__3VTYX\",\"positive\":\"Statistics_positive__2MunF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1cNrH\"};"],"sourceRoot":""}